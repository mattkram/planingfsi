#!/usr/bin/python

# Add subfolder for potential code to python path
import os, sys, inspect
from fnmatch import fnmatch

import numpy as np
import krampy as kp

baseDir = os.getcwd()

if len(sys.argv) > 1:
  runCommands = [c for c in sys.argv[1:]]
else:
  runCommands = ['rigidBodyFSI new']

commandList = []

# Load previous converged trim and draft if path exists
itDir = [it for it in os.listdir(baseDir) if fnmatch(it, '[0-9]*')]
if len(itDir) > 0:
  itDir = kp.sortDirByNum(itDir)[0][-1]
else:
  itDir = ''

dictPathIn = []
dictPathIn.append(itDir+'/motion_default.txt')
dictPathIn.append(itDir+'/motion_default.txt')
dictPathIn.append(itDir+'/forces_bowSealLower.txt')
dictPathIn.append(itDir+'/forces_sternSealLower.txt')
dictPathIn.append(itDir+'/deformation_bowSealLower.txt')
dictPathIn.append(itDir+'/deformation_sternSealLower.txt')
dictPathIn.append(itDir+'/motion_bowSealBody.txt')
dictPathIn.append(itDir+'/motion_bowSealBody.txt')
dictPathIn.append(itDir+'/motion_sternSealBody.txt')
dictPathIn.append(itDir+'/motion_sternSealBody.txt')

varNameIn = []
varNameIn.append('draft')
varNameIn.append('trim')
varNameIn.append('Length')
varNameIn.append('Length')
varNameIn.append('angle')
varNameIn.append('angle')
varNameIn.append('draft')
varNameIn.append('trim')
varNameIn.append('draft')
varNameIn.append('trim')

varValIn = np.ones(len(varNameIn)) * np.nan
for i, dictPath, varName in zip(range(len(dictPathIn)), dictPathIn, varNameIn):
  varValIn[i] = kp.Dictionary(os.path.join(baseDir, dictPath)).read_or_default(varName, np.nan)
  
#  if varName == 'draft':
#    varValIn[i] += 1e-6

dictPathOut = []
dictPathOut.append('configDict')
dictPathOut.append('configDict')
dictPathOut.append('inputDict/bowSealLowerDict')
dictPathOut.append('inputDict/sternSealLowerDict')
dictPathOut.append('inputDict/bowSealLowerDict')
dictPathOut.append('inputDict/sternSealLowerDict')
dictPathOut.append('bodyDict/bowSealBody')
dictPathOut.append('bodyDict/bowSealBody')
dictPathOut.append('bodyDict/sternSealBody')
dictPathOut.append('bodyDict/sternSealBody')

varNameOut = []
varNameOut.append('initialDraft')
varNameOut.append('initialTrim')
varNameOut.append('initialLength')
varNameOut.append('initialLength')
varNameOut.append('initialAngle')
varNameOut.append('initialAngle')
varNameOut.append('initialDraft')
varNameOut.append('initialTrim')
varNameOut.append('initialDraft')
varNameOut.append('initialTrim')

for varVal, dictPath, varName in zip(varValIn, dictPathOut, varNameOut):
  if ~np.isnan(varVal):
    commandList.append('setDictVal {0} {1} {2:10.8e}'.format(os.path.join(baseDir, dictPath), varName, varVal))

commandList += runCommands

for command in commandList:
  print command
  os.system(command)
